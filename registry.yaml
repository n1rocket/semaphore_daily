apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: registry
  template:
    metadata:
      labels:
        app: registry
    spec:
      containers:
        - name: registry
          image: registry:2
          ports:
            - containerPort: 5000
          env:
            - name: REGISTRY_HTTP_ADDR
              value: 0.0.0.0:5000
            - name: REGISTRY_HTTP_TLS_CERTIFICATE
              value: ""
            - name: REGISTRY_HTTP_TLS_KEY
              value: ""
          volumeMounts:
            - name: storage
              mountPath: /var/lib/registry
      volumes:
        - name: storage
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: registry
spec:
  selector:
    app: registry
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
      nodePort: 31000
  type: NodePort

---
apiVersion: v1
kind: Secret
metadata:
  name: regcred
data:
  .dockerconfigjson: secret
type: kubernetes.io/dockerconfigjson

# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: registry-ingress
#   annotations:
#     kubernetes.io/ingress.class: "nginx" # Ajustar según tu Ingress Controller
# spec:
#   tls:
#     - secretName: registry-tls
#   rules:
#     - http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: registry
#                 port:

#                   number: 5000
# ---
# apiVersion: cert-manager.io/v1
# kind: Certificate
# metadata:
#   name: registry-cert
# spec:
#   secretName: registry-tls
#   issuerRef:
#     name: internal-ca-issuer
#     kind: Issuer
#   dnsNames:
#     - registry.internal.local
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    # URL del endpoint de producción de Let's Encrypt
    server: https://acme-v02.api.letsencrypt.org/directory
    # Email usado para recibir notificaciones
    email: admin@n1rocket.com
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
      - http01:
          ingress:
            class: nginx
